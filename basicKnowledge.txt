Java简介
  Java介于编译型语言和解释型语言之间。
    1.编译型语言如C、C++，代码是直接编译成机器码执行，但是不同的平台（x86、ARM等）CPU的指令集不同，因此，需要编译出每一种平台的对应机器码。
    2.解释型语言如Python、Ruby没有这个问题，可以由解释器直接加载源码然后运行，代价是运行效率太低。
    3.而Java是将代码编译成一种“字节码”，它类似于抽象的CPU指令，然后，针对不同平台编写虚拟机，不同平台的虚拟机负责加载字节码并执行，这样就实现了“一次编写，到处运行”的效果。
    
  Java SE：Standard Edition
  Java EE：Enterprise Edition
  Java ME：Micro Edition

关于jdk，jre， jvm

  1.jdk：Java Development Kit —— java开发工具
    提供了编译、运行Java程序所需的各种工具和资源，包括Java编译器、Java运行时环境，以及常用的Java类库等。
  2.jre：Java Runtime Environment —— java运行环境
    用于解释执行Java的字节码文件
  3.jvm：Java Virtual Mechinal —— java虚拟机
    jre的一部分，是整个java实现跨平台的最核心的部分，负责解释执行字节码文件，是可运行java字节码文件的虚拟计算机。
    所有平台的上的JVM向编译器提供相同的接口，而编译器只需要面向虚拟机，生成虚拟机能识别的代码，然后由虚拟机来解释执行

  JDK 用于开发，JRE 用于运行java程序 ；如果只是运行Java程序，可以只安装JRE，无序安装JDK。
  JDk包含JRE，JDK 和 JRE 中都包含 JVM。
  JVM 是 java 编程语言的核心并且具有平台独立性。


关于maven

  是一个jar包依赖管理软件，方便快速构建java工程。
  项目对象模型POM，项目管理工具软件，可以通过简短的信息描述来管理项目的构造，报告和文档。
  除了具有构建程序的功能外，Maven还提供了高级项目管理工具。
  由于Maven的默认构建规则具有很高的可重用性，因此通常可以使用两到三行Maven构建脚本来构建简单的项目。

  功能一：
    Maven主要用于解决导入依赖于Java类的jar和编译Java项目的主要问题
  功能二：
    Jar包管理，以防止jar之间的依赖关系冲突。
    在组之间建立私有服务。每个人都使用通用的maven配置文件，而不是手动下载jar。
    pom文件将自动管理下载的jar包。
  功能三:
    Maven是基于项目对象模型的软件项目管理工具，可以通过一小段描述信息来管理项目的构造，报告和文档。
    如：在开发过程中，合作成员引用的jar版本可能会有所不同，并且同一jar的不同版本可能会重复引用。
        可以通过使用Maven关联jar来配置引用的jar的版本，以避免冲突

  当我们从maven中获取jar包的时候，maven首先会在本地仓库中查找
  如果本地仓库有则返回；如果没有则从远程仓库中获取包，并在本地库中保存。
  此外，我们在maven项目中运行mvn install，项目将会自动打包并安装到本地仓库中。

关于